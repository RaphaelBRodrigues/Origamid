{"ast":null,"code":"import _slicedToArray from\"/home/raphael/Desktop/Origamid/React/ProjetoDogs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import React from'react';import style from'./UserStatsGraphs.module.css';import{VictoryPie,VictoryChart,VictoryBar}from'victory';var UserStatsGraphs=function UserStatsGraphs(_ref){var data=_ref.data;var _React$useState=React.useState([]),_React$useState2=_slicedToArray(_React$useState,2),graph=_React$useState2[0],setGraph=_React$useState2[1];var _React$useState3=React.useState(0),_React$useState4=_slicedToArray(_React$useState3,2),total=_React$useState4[0],setTotal=_React$useState4[1];React.useEffect(function(){var graphData=data.map(function(item){return{x:item.title,y:item.acessos};});setGraph(graphData);var result=data.reduce(function(sum,item){return Number(sum+item.acessos);},0);setTotal(result);},[]);return/*#__PURE__*/_jsxs(\"section\",{className:\"animeLeft \".concat(style.graph),children:[/*#__PURE__*/_jsx(\"div\",{className:\"\".concat(style.total,\" \").concat(style.graphItem),children:/*#__PURE__*/_jsxs(\"p\",{children:[\"Acessos: \",total]})}),/*#__PURE__*/_jsx(\"div\",{className:\"\".concat(style.graphItem),children:/*#__PURE__*/_jsx(VictoryPie,{innerRadius:\"99\",data:graph,paddding:{top:20,bottom:20,left:80,right:80},style:{data:{fillOpacity:0.9,stroke:'#fff',strokeWidth:2},label:{fontSize:14,fill:'#333'}}})}),/*#__PURE__*/_jsx(\"div\",{className:\"\".concat(style.graphItem),children:/*#__PURE__*/_jsx(VictoryChart,{children:/*#__PURE__*/_jsx(VictoryBar,{data:graph,alignment:\"start\"})})})]});};export default UserStatsGraphs;","map":{"version":3,"sources":["/home/raphael/Desktop/Origamid/React/ProjetoDogs/src/Pages/User/Components/Stats/Graphs/index.js"],"names":["React","style","VictoryPie","VictoryChart","VictoryBar","UserStatsGraphs","data","useState","graph","setGraph","total","setTotal","useEffect","graphData","map","item","x","title","y","acessos","result","reduce","sum","Number","graphItem","top","bottom","left","right","fillOpacity","stroke","strokeWidth","label","fontSize","fill"],"mappings":"+PAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,KAAP,KAAkB,8BAAlB,CACA,OAASC,UAAT,CAAqBC,YAArB,CAAmCC,UAAnC,KAAqD,SAArD,CAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,MAAc,IAAXC,CAAAA,IAAW,MAAXA,IAAW,qBACVN,KAAK,CAACO,QAAN,CAAe,EAAf,CADU,oDAC7BC,KAD6B,qBACtBC,QADsB,0CAEVT,KAAK,CAACO,QAAN,CAAe,CAAf,CAFU,qDAE7BG,KAF6B,qBAEtBC,QAFsB,qBAIpCX,KAAK,CAACY,SAAN,CAAgB,UAAM,CACpB,GAAMC,CAAAA,SAAS,CAAGP,IAAI,CAACQ,GAAL,CAAS,SAACC,IAAD,CAAU,CACnC,MAAO,CACLC,CAAC,CAAED,IAAI,CAACE,KADH,CAELC,CAAC,CAAEH,IAAI,CAACI,OAFH,CAAP,CAID,CALiB,CAAlB,CAMAV,QAAQ,CAACI,SAAD,CAAR,CAEA,GAAMO,CAAAA,MAAM,CAAGd,IAAI,CAACe,MAAL,CAAY,SAACC,GAAD,CAAMP,IAAN,CAAe,CACxC,MAAOQ,CAAAA,MAAM,CAACD,GAAG,CAAGP,IAAI,CAACI,OAAZ,CAAb,CACD,CAFc,CAEZ,CAFY,CAAf,CAGAR,QAAQ,CAACS,MAAD,CAAR,CACD,CAbD,CAaG,EAbH,EAeA,mBACE,iBAAS,SAAS,qBAAenB,KAAK,CAACO,KAArB,CAAlB,wBACE,YAAK,SAAS,WAAKP,KAAK,CAACS,KAAX,aAAoBT,KAAK,CAACuB,SAA1B,CAAd,uBACE,iCAAad,KAAb,GADF,EADF,cAIE,YAAK,SAAS,WAAKT,KAAK,CAACuB,SAAX,CAAd,uBACE,KAAC,UAAD,EACE,WAAW,CAAC,IADd,CAEE,IAAI,CAAEhB,KAFR,CAGE,QAAQ,CAAE,CACRiB,GAAG,CAAE,EADG,CAERC,MAAM,CAAE,EAFA,CAGRC,IAAI,CAAE,EAHE,CAIRC,KAAK,CAAE,EAJC,CAHZ,CASE,KAAK,CAAE,CACLtB,IAAI,CAAE,CACJuB,WAAW,CAAE,GADT,CAEJC,MAAM,CAAE,MAFJ,CAGJC,WAAW,CAAE,CAHT,CADD,CAMLC,KAAK,CAAE,CACLC,QAAQ,CAAE,EADL,CAELC,IAAI,CAAE,MAFD,CANF,CATT,EADF,EAJF,cA2BE,YAAK,SAAS,WAAKjC,KAAK,CAACuB,SAAX,CAAd,uBACE,KAAC,YAAD,wBACE,KAAC,UAAD,EAAY,IAAI,CAAEhB,KAAlB,CAAyB,SAAS,CAAC,OAAnC,EADF,EADF,EA3BF,GADF,CAmCD,CAtDD,CAwDA,cAAeH,CAAAA,eAAf","sourcesContent":["import React from 'react';\nimport style from './UserStatsGraphs.module.css';\nimport { VictoryPie, VictoryChart, VictoryBar } from 'victory';\n\nconst UserStatsGraphs = ({ data }) => {\n  const [graph, setGraph] = React.useState([]);\n  const [total, setTotal] = React.useState(0);\n\n  React.useEffect(() => {\n    const graphData = data.map((item) => {\n      return {\n        x: item.title,\n        y: item.acessos,\n      };\n    });\n    setGraph(graphData);\n\n    const result = data.reduce((sum, item) => {\n      return Number(sum + item.acessos);\n    }, 0);\n    setTotal(result);\n  }, []);\n\n  return (\n    <section className={`animeLeft ${style.graph}`}>\n      <div className={`${style.total} ${style.graphItem}`}>\n        <p>Acessos: {total}</p>\n      </div>\n      <div className={`${style.graphItem}`}>\n        <VictoryPie\n          innerRadius=\"99\"\n          data={graph}\n          paddding={{\n            top: 20,\n            bottom: 20,\n            left: 80,\n            right: 80,\n          }}\n          style={{\n            data: {\n              fillOpacity: 0.9,\n              stroke: '#fff',\n              strokeWidth: 2,\n            },\n            label: {\n              fontSize: 14,\n              fill: '#333',\n            },\n          }}\n        />\n      </div>\n      <div className={`${style.graphItem}`}>\n        <VictoryChart>\n          <VictoryBar data={graph} alignment=\"start\" />\n        </VictoryChart>\n      </div>\n    </section>\n  );\n};\n\nexport default UserStatsGraphs;\n"]},"metadata":{},"sourceType":"module"}