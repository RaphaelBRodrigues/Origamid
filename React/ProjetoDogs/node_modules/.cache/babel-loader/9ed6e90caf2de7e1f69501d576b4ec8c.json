{"ast":null,"code":"export const API_URL = 'https://dogsapi.origamid.dev/json';\nexport function TOKEN_POST(body) {\n  return {\n    url: API_URL + '/jwt-auth/v1/token',\n    options: {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    }\n  };\n}\n_c = TOKEN_POST;\nexport function USER_GET(token) {\n  return {\n    url: API_URL + '/api/user',\n    options: {\n      method: 'GET',\n      headers: {\n        Authorization: 'Bearer ' + token\n      }\n    }\n  };\n}\n_c2 = USER_GET;\nexport function TOKEN_VALIDATE_POST(token) {\n  return {\n    url: API_URL + '/token/validate',\n    options: {\n      method: 'POST',\n      headers: {\n        Authorization: token\n      }\n    }\n  };\n}\n_c3 = TOKEN_VALIDATE_POST;\nexport function USER_POST(body) {\n  return {\n    url: API_URL + '/api/user',\n    options: {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      method: 'POST',\n      body: JSON.stringify(body)\n    }\n  };\n}\n_c4 = USER_POST;\nexport function PHOTO_POST(formData, token) {\n  return {\n    url: API_URL + '/api/photo',\n    options: {\n      headers: {\n        Authorization: 'Bearer ' + token\n      },\n      method: 'POST',\n      body: formData\n    }\n  };\n}\n_c5 = PHOTO_POST;\nexport function PHOTOS_GET({\n  page,\n  total,\n  user\n}) {\n  return {\n    url: `${API_URL}/api/photo/?_page=${page}&_total=${total}&_user=${user}`,\n    options: {\n      method: 'GET',\n      cache: 'no-store'\n    }\n  };\n}\n_c6 = PHOTOS_GET;\nexport const PHOTO_GET = id => {\n  return {\n    url: API_URL + \"/api/photo/\" + idd,\n    options: {\n      method: \"GET\",\n      cache: \"no-store\"\n    }\n  };\n};\n_c7 = PHOTO_GET;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"TOKEN_POST\");\n$RefreshReg$(_c2, \"USER_GET\");\n$RefreshReg$(_c3, \"TOKEN_VALIDATE_POST\");\n$RefreshReg$(_c4, \"USER_POST\");\n$RefreshReg$(_c5, \"PHOTO_POST\");\n$RefreshReg$(_c6, \"PHOTOS_GET\");\n$RefreshReg$(_c7, \"PHOTO_GET\");","map":{"version":3,"sources":["/home/raphael/Desktop/Origamid/React/ProjetoDogs/src/api.js"],"names":["API_URL","TOKEN_POST","body","url","options","method","headers","JSON","stringify","USER_GET","token","Authorization","TOKEN_VALIDATE_POST","USER_POST","PHOTO_POST","formData","PHOTOS_GET","page","total","user","cache","PHOTO_GET","id","idd"],"mappings":"AAAA,OAAO,MAAMA,OAAO,GAAG,mCAAhB;AAEP,OAAO,SAASC,UAAT,CAAoBC,IAApB,EAA0B;AAC/B,SAAO;AACLC,IAAAA,GAAG,EAAEH,OAAO,GAAG,oBADV;AAELI,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE,MADD;AAEPC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFF;AAKPJ,MAAAA,IAAI,EAAEK,IAAI,CAACC,SAAL,CAAeN,IAAf;AALC;AAFJ,GAAP;AAUD;KAXeD,U;AAahB,OAAO,SAASQ,QAAT,CAAkBC,KAAlB,EAAyB;AAC9B,SAAO;AACLP,IAAAA,GAAG,EAAEH,OAAO,GAAG,WADV;AAELI,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE,KADD;AAEPC,MAAAA,OAAO,EAAE;AACPK,QAAAA,aAAa,EAAE,YAAYD;AADpB;AAFF;AAFJ,GAAP;AASD;MAVeD,Q;AAYhB,OAAO,SAASG,mBAAT,CAA6BF,KAA7B,EAAoC;AACzC,SAAO;AACLP,IAAAA,GAAG,EAAEH,OAAO,GAAG,iBADV;AAELI,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE,MADD;AAEPC,MAAAA,OAAO,EAAE;AACPK,QAAAA,aAAa,EAAED;AADR;AAFF;AAFJ,GAAP;AASD;MAVeE,mB;AAYhB,OAAO,SAASC,SAAT,CAAmBX,IAAnB,EAAyB;AAC9B,SAAO;AACLC,IAAAA,GAAG,EAAEH,OAAO,GAAG,WADV;AAELI,IAAAA,OAAO,EAAE;AACPE,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OADF;AAIPD,MAAAA,MAAM,EAAE,MAJD;AAKPH,MAAAA,IAAI,EAAEK,IAAI,CAACC,SAAL,CAAeN,IAAf;AALC;AAFJ,GAAP;AAUD;MAXeW,S;AAahB,OAAO,SAASC,UAAT,CAAoBC,QAApB,EAA8BL,KAA9B,EAAqC;AAC1C,SAAO;AACLP,IAAAA,GAAG,EAAEH,OAAO,GAAG,YADV;AAELI,IAAAA,OAAO,EAAE;AACPE,MAAAA,OAAO,EAAE;AACPK,QAAAA,aAAa,EAAE,YAAYD;AADpB,OADF;AAIPL,MAAAA,MAAM,EAAE,MAJD;AAKPH,MAAAA,IAAI,EAAEa;AALC;AAFJ,GAAP;AAUD;MAXeD,U;AAahB,OAAO,SAASE,UAAT,CAAoB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA;AAAf,CAApB,EAA2C;AAChD,SAAO;AACLhB,IAAAA,GAAG,EAAG,GAAEH,OAAQ,qBAAoBiB,IAAK,WAAUC,KAAM,UAASC,IAAK,EADlE;AAELf,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE,KADD;AAEPe,MAAAA,KAAK,EAAE;AAFA;AAFJ,GAAP;AAOD;MAReJ,U;AAUhB,OAAO,MAAMK,SAAS,GAAIC,EAAD,IAAQ;AAC/B,SAAO;AACLnB,IAAAA,GAAG,EAACH,OAAO,GAAE,aAAT,GAAuBuB,GADtB;AAELnB,IAAAA,OAAO,EAAG;AACRC,MAAAA,MAAM,EAAE,KADA;AAERe,MAAAA,KAAK,EAAC;AAFE;AAFL,GAAP;AAQD,CATM;MAAMC,S","sourcesContent":["export const API_URL = 'https://dogsapi.origamid.dev/json';\n\nexport function TOKEN_POST(body) {\n  return {\n    url: API_URL + '/jwt-auth/v1/token',\n    options: {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(body),\n    },\n  };\n}\n\nexport function USER_GET(token) {\n  return {\n    url: API_URL + '/api/user',\n    options: {\n      method: 'GET',\n      headers: {\n        Authorization: 'Bearer ' + token,\n      },\n    },\n  };\n}\n\nexport function TOKEN_VALIDATE_POST(token) {\n  return {\n    url: API_URL + '/token/validate',\n    options: {\n      method: 'POST',\n      headers: {\n        Authorization: token,\n      },\n    },\n  };\n}\n\nexport function USER_POST(body) {\n  return {\n    url: API_URL + '/api/user',\n    options: {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      method: 'POST',\n      body: JSON.stringify(body),\n    },\n  };\n}\n\nexport function PHOTO_POST(formData, token) {\n  return {\n    url: API_URL + '/api/photo',\n    options: {\n      headers: {\n        Authorization: 'Bearer ' + token,\n      },\n      method: 'POST',\n      body: formData,\n    },\n  };\n}\n\nexport function PHOTOS_GET({ page, total, user }) {\n  return {\n    url: `${API_URL}/api/photo/?_page=${page}&_total=${total}&_user=${user}`,\n    options: {\n      method: 'GET',\n      cache: 'no-store',\n    },\n  };\n}\n\nexport const PHOTO_GET = (id) => {\n  return {\n    url:API_URL +\"/api/photo/\"+idd,\n    options : {\n      method: \"GET\",\n      cache:\"no-store\"\n      \n    }\n  }\n}"]},"metadata":{},"sourceType":"module"}