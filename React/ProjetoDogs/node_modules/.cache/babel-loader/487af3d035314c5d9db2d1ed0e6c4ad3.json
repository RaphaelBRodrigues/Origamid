{"ast":null,"code":"import _slicedToArray from\"/home/raphael/Desktop/Origamid/React/ProjetoDogs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';var types={email:{regex:/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/,message:'Preencha um email válido'},password:{regex:/^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{4,}$/,message:'A senha deve ter no mínimo 4 caracteres, pelo menos 1 letra e 1 número'},number:{regex:/^\\d+$/,message:'Utilize apenas números'}};function useForm(type){var _React$useState=React.useState(''),_React$useState2=_slicedToArray(_React$useState,2),value=_React$useState2[0],setValue=_React$useState2[1];var _React$useState3=React.useState(false),_React$useState4=_slicedToArray(_React$useState3,2),error=_React$useState4[0],setError=_React$useState4[1];function validate(){if(type===false)return true;if(value.length===0){setError('Preencha um valor');return false;}else if(type&&!types[type].regex.test(value)){setError(types[type].message);return false;}else{setError(false);return true;}}function onChange(_ref){var target=_ref.target;setValue(target.value);if(error)validate();}return{value:value,validate:validate,onChange:onChange,error:error};}export default useForm;","map":{"version":3,"sources":["/home/raphael/Desktop/Origamid/React/ProjetoDogs/src/Hooks/useForm.js"],"names":["React","types","email","regex","message","password","number","useForm","type","useState","value","setValue","error","setError","validate","length","test","onChange","target"],"mappings":"uKAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,GAAMC,CAAAA,KAAK,CAAG,CACZC,KAAK,CAAE,CACLC,KAAK,CAAE,4BADF,CAELC,OAAO,CAAE,0BAFJ,CADK,CAKZC,QAAQ,CAAE,CACRF,KAAK,CAAE,wCADC,CAERC,OAAO,CACL,wEAHM,CALE,CAUZE,MAAM,CAAE,CACNH,KAAK,CAAE,OADD,CAENC,OAAO,CAAE,wBAFH,CAVI,CAAd,CAgBA,QAASG,CAAAA,OAAT,CAAiBC,IAAjB,CAAuB,qBACKR,KAAK,CAACS,QAAN,CAAe,EAAf,CADL,oDACdC,KADc,qBACPC,QADO,0CAEKX,KAAK,CAACS,QAAN,CAAe,KAAf,CAFL,qDAEdG,KAFc,qBAEPC,QAFO,qBAIrB,QAASC,CAAAA,QAAT,EAAoB,CAClB,GAAIN,IAAI,GAAK,KAAb,CAAoB,MAAO,KAAP,CAEpB,GAAIE,KAAK,CAACK,MAAN,GAAiB,CAArB,CAAwB,CACtBF,QAAQ,CAAC,mBAAD,CAAR,CACA,MAAO,MAAP,CACD,CAHD,IAGO,IAAIL,IAAI,EAAI,CAACP,KAAK,CAACO,IAAD,CAAL,CAAYL,KAAZ,CAAkBa,IAAlB,CAAuBN,KAAvB,CAAb,CAA4C,CACjDG,QAAQ,CAACZ,KAAK,CAACO,IAAD,CAAL,CAAYJ,OAAb,CAAR,CACA,MAAO,MAAP,CACD,CAHM,IAGA,CACLS,QAAQ,CAAC,KAAD,CAAR,CACA,MAAO,KAAP,CACD,CACF,CAED,QAASI,CAAAA,QAAT,MAA8B,IAAVC,CAAAA,MAAU,MAAVA,MAAU,CAC5BP,QAAQ,CAACO,MAAM,CAACR,KAAR,CAAR,CAEA,GAAIE,KAAJ,CAAWE,QAAQ,GACpB,CAED,MAAO,CACLJ,KAAK,CAALA,KADK,CAELI,QAAQ,CAARA,QAFK,CAGLG,QAAQ,CAARA,QAHK,CAILL,KAAK,CAALA,KAJK,CAAP,CAMD,CAED,cAAeL,CAAAA,OAAf","sourcesContent":["import React from 'react';\n\nconst types = {\n  email: {\n    regex: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/,\n    message: 'Preencha um email válido',\n  },\n  password: {\n    regex: /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{4,}$/,\n    message:\n      'A senha deve ter no mínimo 4 caracteres, pelo menos 1 letra e 1 número',\n  },\n  number: {\n    regex: /^\\d+$/,\n    message: 'Utilize apenas números',\n  },\n};\n\nfunction useForm(type) {\n  const [value, setValue] = React.useState('');\n  const [error, setError] = React.useState(false);\n\n  function validate() {\n    if (type === false) return true;\n\n    if (value.length === 0) {\n      setError('Preencha um valor');\n      return false;\n    } else if (type && !types[type].regex.test(value)) {\n      setError(types[type].message);\n      return false;\n    } else {\n      setError(false);\n      return true;\n    }\n  }\n\n  function onChange({ target }) {\n    setValue(target.value);\n\n    if (error) validate();\n  }\n\n  return {\n    value,\n    validate,\n    onChange,\n    error,\n  };\n}\n\nexport default useForm;\n"]},"metadata":{},"sourceType":"module"}