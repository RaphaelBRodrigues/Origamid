{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/raphael/Desktop/Origamid/React/ProjetoDogs/src/Pages/User/Components/Stats/Graphs/index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport style from './UserStatsGraphs.module.css';\nimport { VictoryPie, VictoryChart, VictoryBar } from 'victory';\n\nconst UserStatsGraphs = ({\n  data\n}) => {\n  _s();\n\n  const [graph, setGraph] = React.useState([]);\n  const [total, setTotal] = React.useState(0);\n  React.useEffect(() => {\n    const graphData = data.map(item => {\n      return {\n        x: item.title,\n        y: item.acessos\n      };\n    });\n    setGraph(graphData);\n    const result = data.reduce((sum, item) => {\n      return Number(sum + item.acessos);\n    }, 0);\n    setTotal(result);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: `animeLeft ${style.graph}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.total,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Acessos: \", total]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(VictoryPie, {\n        innerRadius: \"10\",\n        data: graph\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserStatsGraphs, \"FYXO6uzqDDQScf7mW9YaHRiTLX0=\");\n\n_c = UserStatsGraphs;\nexport default UserStatsGraphs;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserStatsGraphs\");","map":{"version":3,"sources":["/home/raphael/Desktop/Origamid/React/ProjetoDogs/src/Pages/User/Components/Stats/Graphs/index.js"],"names":["React","style","VictoryPie","VictoryChart","VictoryBar","UserStatsGraphs","data","graph","setGraph","useState","total","setTotal","useEffect","graphData","map","item","x","title","y","acessos","result","reduce","sum","Number"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,SAASC,UAAT,EAAqBC,YAArB,EAAmCC,UAAnC,QAAqD,SAArD;;AAEA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAAA;;AACpC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,KAAK,CAACS,QAAN,CAAe,EAAf,CAA1B;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,KAAK,CAACS,QAAN,CAAe,CAAf,CAA1B;AAEAT,EAAAA,KAAK,CAACY,SAAN,CAAgB,MAAM;AACpB,UAAMC,SAAS,GAAGP,IAAI,CAACQ,GAAL,CAAUC,IAAD,IAAU;AACnC,aAAO;AACLC,QAAAA,CAAC,EAAED,IAAI,CAACE,KADH;AAELC,QAAAA,CAAC,EAAEH,IAAI,CAACI;AAFH,OAAP;AAID,KALiB,CAAlB;AAMAX,IAAAA,QAAQ,CAACK,SAAD,CAAR;AAEA,UAAMO,MAAM,GAAGd,IAAI,CAACe,MAAL,CAAY,CAACC,GAAD,EAAMP,IAAN,KAAe;AACxC,aAAOQ,MAAM,CAACD,GAAG,GAAGP,IAAI,CAACI,OAAZ,CAAb;AACD,KAFc,EAEZ,CAFY,CAAf;AAGAR,IAAAA,QAAQ,CAACS,MAAD,CAAR;AACD,GAbD,EAaG,EAbH;AAeA,sBACE;AAAS,IAAA,SAAS,EAAG,aAAYnB,KAAK,CAACM,KAAM,EAA7C;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEN,KAAK,CAACS,KAAtB;AAAA,6BACE;AAAA,gCAAaA,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA,6BACE,QAAC,UAAD;AAAY,QAAA,WAAW,EAAC,IAAxB;AAA6B,QAAA,IAAI,EAAEH;AAAnC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CA7BD;;GAAMF,e;;KAAAA,e;AA+BN,eAAeA,eAAf","sourcesContent":["import React from 'react';\nimport style from './UserStatsGraphs.module.css';\nimport { VictoryPie, VictoryChart, VictoryBar } from 'victory';\n\nconst UserStatsGraphs = ({ data }) => {\n  const [graph, setGraph] = React.useState([]);\n  const [total, setTotal] = React.useState(0);\n\n  React.useEffect(() => {\n    const graphData = data.map((item) => {\n      return {\n        x: item.title,\n        y: item.acessos,\n      };\n    });\n    setGraph(graphData);\n\n    const result = data.reduce((sum, item) => {\n      return Number(sum + item.acessos);\n    }, 0);\n    setTotal(result);\n  }, []);\n\n  return (\n    <section className={`animeLeft ${style.graph}`}>\n      <div className={style.total}>\n        <p>Acessos: {total}</p>\n      </div>\n      <div>\n        <VictoryPie innerRadius=\"10\" data={graph} />\n      </div>\n    </section>\n  );\n};\n\nexport default UserStatsGraphs;\n"]},"metadata":{},"sourceType":"module"}