{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/raphael/Desktop/Origamid/React/ProjetoDogs/src/Components/Helper/ProtecteRoute/index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Navigate, Route } from 'react-router-dom';\nimport { UserContext } from '../../../UserContext';\n\nconst ProtectedRoute = props => {\n  _s();\n\n  const {\n    isLogged\n  } = React.useContext(UserContext);\n  console.log(isLogged);\n\n  if (isLogged === true) {\n    return /*#__PURE__*/_jsxDEV(Route, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 12\n    }, this);\n  } else if (isLogged === false) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 12\n    }, this);\n  }\n\n  return null;\n};\n\n_s(ProtectedRoute, \"1I45wLQv7lTd6VO5U5JJ3tV8Olg=\");\n\n_c = ProtectedRoute;\nexport default ProtectedRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"sources":["/home/raphael/Desktop/Origamid/React/ProjetoDogs/src/Components/Helper/ProtecteRoute/index.js"],"names":["React","Navigate","Route","UserContext","ProtectedRoute","props","isLogged","useContext","console","log"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,kBAAhC;AACA,SAASC,WAAT,QAA4B,sBAA5B;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAAA;;AAChC,QAAM;AAAEC,IAAAA;AAAF,MAAeN,KAAK,CAACO,UAAN,CAAiBJ,WAAjB,CAArB;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;;AAEA,MAAIA,QAAQ,KAAK,IAAjB,EAAuB;AACrB,wBAAO,QAAC,KAAD,OAAWD;AAAX;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFD,MAEO,IAAIC,QAAQ,KAAK,KAAjB,EAAwB;AAC7B,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,SAAO,IAAP;AACD,CAXD;;GAAMF,c;;KAAAA,c;AAaN,eAAeA,cAAf","sourcesContent":["import React from 'react';\nimport { Navigate, Route } from 'react-router-dom';\nimport { UserContext } from '../../../UserContext';\n\nconst ProtectedRoute = (props) => {\n  const { isLogged } = React.useContext(UserContext);\n  console.log(isLogged);\n\n  if (isLogged === true) {\n    return <Route {...props} />;\n  } else if (isLogged === false) {\n    return <Navigate to=\"/login\" />;\n  }\n\n  return null;\n};\n\nexport default ProtectedRoute;\n"]},"metadata":{},"sourceType":"module"}