{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from 'react';\n\nconst useFetch = () => {\n  _s();\n\n  const [data, setData] = React.useState(null);\n  const [error, setError] = React.useState(null);\n  const [loading, setLoading] = React.useState(null);\n  const request = React.useCallback(async (url, options) => {\n    let resp = null;\n    let json = null;\n\n    try {\n      setError(null);\n      setLoading(true);\n      resp = await fetch(url, options);\n      json = await resp.json();\n\n      if (!resp.ok) {\n        throw new Error(json.message);\n      }\n    } catch (err) {\n      json = null;\n      setError(err.message);\n    } finally {\n      setLoading(false);\n      setData(json);\n      return {\n        resp,\n        json\n      };\n    }\n  }, []);\n  return {\n    data,\n    loading,\n    error,\n    request\n  };\n};\n\n_s(useFetch, \"g7VoiWlysnHql/TYwBrj0OebOO4=\");\n\nexport default useFetch;","map":{"version":3,"sources":["/home/raphael/Desktop/Origamid/React/ProjetoDogs/src/Hooks/useFetch.js"],"names":["React","useFetch","data","setData","useState","error","setError","loading","setLoading","request","useCallback","url","options","resp","json","fetch","ok","Error","message","err"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,KAAK,CAACI,QAAN,CAAe,IAAf,CAAxB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,KAAK,CAACI,QAAN,CAAe,IAAf,CAA1B;AACA,QAAM,CAACG,OAAD,EAAUC,UAAV,IAAwBR,KAAK,CAACI,QAAN,CAAe,IAAf,CAA9B;AAEA,QAAMK,OAAO,GAAGT,KAAK,CAACU,WAAN,CAAkB,OAAOC,GAAP,EAAYC,OAAZ,KAAwB;AACxD,QAAIC,IAAI,GAAG,IAAX;AACA,QAAIC,IAAI,GAAG,IAAX;;AACA,QAAI;AACFR,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACAE,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAK,MAAAA,IAAI,GAAG,MAAME,KAAK,CAACJ,GAAD,EAAMC,OAAN,CAAlB;AACAE,MAAAA,IAAI,GAAG,MAAMD,IAAI,CAACC,IAAL,EAAb;;AACA,UAAI,CAACD,IAAI,CAACG,EAAV,EAAc;AACZ,cAAM,IAAIC,KAAJ,CAAUH,IAAI,CAACI,OAAf,CAAN;AACD;AACF,KARD,CAQE,OAAOC,GAAP,EAAY;AACZL,MAAAA,IAAI,GAAG,IAAP;AACAR,MAAAA,QAAQ,CAACa,GAAG,CAACD,OAAL,CAAR;AACD,KAXD,SAWU;AACRV,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAL,MAAAA,OAAO,CAACW,IAAD,CAAP;AACA,aAAO;AACLD,QAAAA,IADK;AAELC,QAAAA;AAFK,OAAP;AAID;AACF,GAtBe,EAsBb,EAtBa,CAAhB;AAwBA,SAAO;AACLZ,IAAAA,IADK;AAELK,IAAAA,OAFK;AAGLF,IAAAA,KAHK;AAILI,IAAAA;AAJK,GAAP;AAMD,CAnCD;;GAAMR,Q;;AAqCN,eAAeA,QAAf","sourcesContent":["import React from 'react';\n\nconst useFetch = () => {\n  const [data, setData] = React.useState(null);\n  const [error, setError] = React.useState(null);\n  const [loading, setLoading] = React.useState(null);\n\n  const request = React.useCallback(async (url, options) => {\n    let resp = null;\n    let json = null;\n    try {\n      setError(null);\n      setLoading(true);\n      resp = await fetch(url, options);\n      json = await resp.json();\n      if (!resp.ok) {\n        throw new Error(json.message);\n      }\n    } catch (err) {\n      json = null;\n      setError(err.message);\n    } finally {\n      setLoading(false);\n      setData(json);\n      return {\n        resp,\n        json,\n      };\n    }\n  }, []);\n\n  return {\n    data,\n    loading,\n    error,\n    request,\n  };\n};\n\nexport default useFetch;\n"]},"metadata":{},"sourceType":"module"}