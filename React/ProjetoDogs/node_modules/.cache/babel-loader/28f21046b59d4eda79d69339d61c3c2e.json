{"ast":null,"code":"export var API_URL='https://dogsapi.origamid.dev/json';export function TOKEN_POST(body){return{url:API_URL+'/jwt-auth/v1/token',options:{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(body)}};}export function USER_GET(token){return{url:API_URL+'/api/user',options:{method:'GET',headers:{Authorization:'Bearer '+token}}};}export function TOKEN_VALIDATE_POST(token){return{url:API_URL+'/token/validate',options:{method:'POST',headers:{Authorization:token}}};}export function USER_POST(body){return{url:API_URL+'/api/user',options:{headers:{'Content-Type':'application/json'},method:'POST',body:JSON.stringify(body)}};}export function PHOTO_POST(formData,token){return{url:API_URL+'/api/photo',options:{headers:{Authorization:'Bearer '+token},method:'POST',body:formData}};}export function PHOTOS_GET(_ref){var page=_ref.page,total=_ref.total,user=_ref.user;return{url:\"\".concat(API_URL,\"/api/photo/?_page=\").concat(page,\"&_total=\").concat(total,\"&_user=\").concat(user),options:{method:'GET',cache:'no-store'}};}export var PHOTO_GET=function PHOTO_GET(id){return{url:API_URL+'/api/photo/'+id,options:{method:'GET',cache:'no-store'}};};export var COMMENT_POST=function COMMENT_POST(id,body){return{url:API_URL+'/api/comment/'+id,options:{headers:{'Content-Type':'application/json',Authorization:'Bearer '+window.localStorage.getItem('token')},method:'POST',body:JSON.stringify(body)}};};export var PHOTO_DELETE=function PHOTO_DELETE(id){return{url:API_URL+'/api/photo/'+id,options:{headers:{Authorization:'Bearer '+window.localStorage.getItem('token')},method:'DELETE'}};};export var PASSWORD_LOST=function PASSWORD_LOST(body){return{url:API_URL+'/api/password/lost',options:{headers:{'Content-Type':'application/json'},method:'POST',body:JSON.stringify(body)}};};export var PASSWORD_RESET=function PASSWORD_RESET(body){return{url:API_URL+'/api/password/reset',options:{headers:{'Content-Type':'application/json'},method:'POST',body:JSON.stringify(body)}};};export var STATS_GET=function STATS_GET(){return{url:API_URL+'/api/stats',options:{headers:{Authorization:'Bearer '+window.localStorage.getItem('token')},method:'GET'}};};","map":{"version":3,"sources":["/home/raphael/Desktop/Origamid/React/ProjetoDogs/src/api.js"],"names":["API_URL","TOKEN_POST","body","url","options","method","headers","JSON","stringify","USER_GET","token","Authorization","TOKEN_VALIDATE_POST","USER_POST","PHOTO_POST","formData","PHOTOS_GET","page","total","user","cache","PHOTO_GET","id","COMMENT_POST","window","localStorage","getItem","PHOTO_DELETE","PASSWORD_LOST","PASSWORD_RESET","STATS_GET"],"mappings":"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","sourcesContent":["export const API_URL = 'https://dogsapi.origamid.dev/json';\n\nexport function TOKEN_POST(body) {\n  return {\n    url: API_URL + '/jwt-auth/v1/token',\n    options: {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(body),\n    },\n  };\n}\n\nexport function USER_GET(token) {\n  return {\n    url: API_URL + '/api/user',\n    options: {\n      method: 'GET',\n      headers: {\n        Authorization: 'Bearer ' + token,\n      },\n    },\n  };\n}\n\nexport function TOKEN_VALIDATE_POST(token) {\n  return {\n    url: API_URL + '/token/validate',\n    options: {\n      method: 'POST',\n      headers: {\n        Authorization: token,\n      },\n    },\n  };\n}\n\nexport function USER_POST(body) {\n  return {\n    url: API_URL + '/api/user',\n    options: {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      method: 'POST',\n      body: JSON.stringify(body),\n    },\n  };\n}\n\nexport function PHOTO_POST(formData, token) {\n  return {\n    url: API_URL + '/api/photo',\n    options: {\n      headers: {\n        Authorization: 'Bearer ' + token,\n      },\n      method: 'POST',\n      body: formData,\n    },\n  };\n}\n\nexport function PHOTOS_GET({ page, total, user }) {\n  return {\n    url: `${API_URL}/api/photo/?_page=${page}&_total=${total}&_user=${user}`,\n    options: {\n      method: 'GET',\n      cache: 'no-store',\n    },\n  };\n}\n\nexport const PHOTO_GET = (id) => {\n  return {\n    url: API_URL + '/api/photo/' + id,\n    options: {\n      method: 'GET',\n      cache: 'no-store',\n    },\n  };\n};\n\nexport const COMMENT_POST = (id, body) => {\n  return {\n    url: API_URL + '/api/comment/' + id,\n    options: {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + window.localStorage.getItem('token'),\n      },\n      method: 'POST',\n      body: JSON.stringify(body),\n    },\n  };\n};\n\nexport const PHOTO_DELETE = (id) => {\n  return {\n    url: API_URL + '/api/photo/' + id,\n    options: {\n      headers: {\n        Authorization: 'Bearer ' + window.localStorage.getItem('token'),\n      },\n      method: 'DELETE',\n    },\n  };\n};\n\nexport const PASSWORD_LOST = (body) => {\n  return {\n    url: API_URL + '/api/password/lost',\n    options: {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      method: 'POST',\n      body: JSON.stringify(body),\n    },\n  };\n};\n\nexport const PASSWORD_RESET = (body) => {\n  return {\n    url: API_URL + '/api/password/reset',\n    options: {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      method: 'POST',\n      body: JSON.stringify(body),\n    },\n  };\n};\n\nexport const STATS_GET = () => {\n  return {\n    url: API_URL + '/api/stats',\n    options: {\n      headers: {\n        Authorization: 'Bearer ' + window.localStorage.getItem('token'),\n      },\n      method: 'GET',\n    },\n  };\n};\n"]},"metadata":{},"sourceType":"module"}