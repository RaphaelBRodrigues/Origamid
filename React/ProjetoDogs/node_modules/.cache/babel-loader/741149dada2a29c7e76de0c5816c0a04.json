{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from 'react';\nconst types = {\n  email: {\n    regex: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/,\n    message: 'Preencha um email válido'\n  },\n  passwordd: {\n    regex: /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{4,}$/,\n    message: 'A senha deve ter no mínimo 4 caracteres, pelo menos 1 letra e 1 número'\n  }\n};\n\nfunction useForm(type) {\n  _s();\n\n  const [value, setValue] = React.useState('');\n  const [error, setError] = React.useState(false);\n\n  function validate() {\n    if (type === false) return true;\n\n    if (value.length === 0) {\n      setError('Preencha um valor');\n      return false;\n    } else if (type && !types[type].regex.test(value)) {\n      setError(types[type].message);\n      return false;\n    } else {\n      setError(false);\n      return true;\n    }\n  }\n\n  function onChange({\n    target\n  }) {\n    setValue(target.value);\n    if (error) validate();\n  }\n\n  return {\n    value,\n    validate,\n    onChange,\n    error\n  };\n}\n\n_s(useForm, \"AX1OI4JmXcOqSmaCwtD1Ci9wAvg=\");\n\nexport default useForm;","map":{"version":3,"sources":["/home/raphael/Desktop/Origamid/React/ProjetoDogs/src/Hooks/useForm.js"],"names":["React","types","email","regex","message","passwordd","useForm","type","value","setValue","useState","error","setError","validate","length","test","onChange","target"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,KAAK,GAAG;AACZC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAE,4BADF;AAELC,IAAAA,OAAO,EAAE;AAFJ,GADK;AAKZC,EAAAA,SAAS,EAAE;AACTF,IAAAA,KAAK,EAAE,wCADE;AAETC,IAAAA,OAAO,EACL;AAHO;AALC,CAAd;;AAYA,SAASE,OAAT,CAAiBC,IAAjB,EAAuB;AAAA;;AACrB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,KAAK,CAACU,QAAN,CAAe,EAAf,CAA1B;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,KAAK,CAACU,QAAN,CAAe,KAAf,CAA1B;;AAEA,WAASG,QAAT,GAAoB;AAClB,QAAIN,IAAI,KAAK,KAAb,EAAoB,OAAO,IAAP;;AAEpB,QAAIC,KAAK,CAACM,MAAN,KAAiB,CAArB,EAAwB;AACtBF,MAAAA,QAAQ,CAAC,mBAAD,CAAR;AACA,aAAO,KAAP;AACD,KAHD,MAGO,IAAIL,IAAI,IAAI,CAACN,KAAK,CAACM,IAAD,CAAL,CAAYJ,KAAZ,CAAkBY,IAAlB,CAAuBP,KAAvB,CAAb,EAA4C;AACjDI,MAAAA,QAAQ,CAACX,KAAK,CAACM,IAAD,CAAL,CAAYH,OAAb,CAAR;AACA,aAAO,KAAP;AACD,KAHM,MAGA;AACLQ,MAAAA,QAAQ,CAAC,KAAD,CAAR;AACA,aAAO,IAAP;AACD;AACF;;AAED,WAASI,QAAT,CAAkB;AAAEC,IAAAA;AAAF,GAAlB,EAA8B;AAC5BR,IAAAA,QAAQ,CAACQ,MAAM,CAACT,KAAR,CAAR;AAEA,QAAIG,KAAJ,EAAWE,QAAQ;AACpB;;AAED,SAAO;AACLL,IAAAA,KADK;AAELK,IAAAA,QAFK;AAGLG,IAAAA,QAHK;AAILL,IAAAA;AAJK,GAAP;AAMD;;GA/BQL,O;;AAiCT,eAAeA,OAAf","sourcesContent":["import React from 'react';\n\nconst types = {\n  email: {\n    regex: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/,\n    message: 'Preencha um email válido',\n  },\n  passwordd: {\n    regex: /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{4,}$/,\n    message:\n      'A senha deve ter no mínimo 4 caracteres, pelo menos 1 letra e 1 número',\n  },\n};\n\nfunction useForm(type) {\n  const [value, setValue] = React.useState('');\n  const [error, setError] = React.useState(false);\n\n  function validate() {\n    if (type === false) return true;\n\n    if (value.length === 0) {\n      setError('Preencha um valor');\n      return false;\n    } else if (type && !types[type].regex.test(value)) {\n      setError(types[type].message);\n      return false;\n    } else {\n      setError(false);\n      return true;\n    }\n  }\n\n  function onChange({ target }) {\n    setValue(target.value);\n\n    if (error) validate();\n  }\n\n  return {\n    value,\n    validate,\n    onChange,\n    error,\n  };\n}\n\nexport default useForm;\n"]},"metadata":{},"sourceType":"module"}