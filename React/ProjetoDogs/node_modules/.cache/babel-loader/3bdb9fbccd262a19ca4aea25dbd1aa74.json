{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/raphael/Desktop/Origamid/React/ProjetoDogs/src/Pages/Login/Components/LoginPasswordReset/index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Input from '../../../../Components/Form/Input';\nimport Button from '../../../../Components/Form/Button';\nimport Error from '../../../../Components/Helper/Error';\nimport useForm from '../../../../Hooks/useForm';\nimport useFetch from '../../../../Hooks/useFetch';\nimport { PASSWORD_RESET } from '../../../../api';\nimport { useNavigate } from 'react-router-dom';\n\nfunction LoginPasswordReset() {\n  _s();\n\n  const reset = useForm();\n  const [login, setLogin] = React.useState('');\n  const [key, setKey] = React.useState('');\n  const {\n    request,\n    loading,\n    error\n  } = useFetch();\n  const navigate = useNavigate();\n  React.useState(() => {\n    const params = URLSearchParams(window.location.search);\n    const key = params.get('key');\n\n    if (key) {\n      setKey(key);\n    }\n\n    if (login) {\n      setKey(login);\n    }\n  }, []);\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    const {\n      url,\n      options\n    } = PASSWORD_RESET({\n      login,\n      key\n    });\n    const {\n      resp\n    } = await request(url, options);\n\n    if (resp.ok) {\n      navigate('/login');\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Reset a senha\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      label: \"Nova senha\",\n      type: \"passwordd\",\n      name: \"password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      children: \"Resetar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LoginPasswordReset, \"H6QoGFNEZnOjvtufVksXcVSgu/Y=\", false, function () {\n  return [useForm, useFetch, useNavigate];\n});\n\n_c = LoginPasswordReset;\nexport default LoginPasswordReset;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPasswordReset\");","map":{"version":3,"sources":["/home/raphael/Desktop/Origamid/React/ProjetoDogs/src/Pages/Login/Components/LoginPasswordReset/index.js"],"names":["React","Input","Button","Error","useForm","useFetch","PASSWORD_RESET","useNavigate","LoginPasswordReset","reset","login","setLogin","useState","key","setKey","request","loading","error","navigate","params","URLSearchParams","window","location","search","get","handleSubmit","e","preventDefault","url","options","resp","ok"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,mCAAlB;AACA,OAAOC,MAAP,MAAmB,oCAAnB;AACA,OAAOC,KAAP,MAAkB,qCAAlB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAASC,cAAT,QAA+B,iBAA/B;AACA,SAASC,WAAT,QAA4B,kBAA5B;;AAEA,SAASC,kBAAT,GAA8B;AAAA;;AAC5B,QAAMC,KAAK,GAAGL,OAAO,EAArB;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBX,KAAK,CAACY,QAAN,CAAe,EAAf,CAA1B;AACA,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBd,KAAK,CAACY,QAAN,CAAe,EAAf,CAAtB;AACA,QAAM;AAAEG,IAAAA,OAAF;AAAWC,IAAAA,OAAX;AAAoBC,IAAAA;AAApB,MAA8BZ,QAAQ,EAA5C;AACA,QAAMa,QAAQ,GAAGX,WAAW,EAA5B;AAEAP,EAAAA,KAAK,CAACY,QAAN,CAAe,MAAM;AACnB,UAAMO,MAAM,GAAGC,eAAe,CAACC,MAAM,CAACC,QAAP,CAAgBC,MAAjB,CAA9B;AACA,UAAMV,GAAG,GAAGM,MAAM,CAACK,GAAP,CAAW,KAAX,CAAZ;;AAEA,QAAIX,GAAJ,EAAS;AACPC,MAAAA,MAAM,CAACD,GAAD,CAAN;AACD;;AACD,QAAIH,KAAJ,EAAW;AACTI,MAAAA,MAAM,CAACJ,KAAD,CAAN;AACD;AACF,GAVD,EAUG,EAVH;;AAYA,iBAAee,YAAf,CAA4BC,CAA5B,EAA+B;AAC7BA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAM;AAAEC,MAAAA,GAAF;AAAOC,MAAAA;AAAP,QAAmBvB,cAAc,CAAC;AACtCI,MAAAA,KADsC;AAEtCG,MAAAA;AAFsC,KAAD,CAAvC;AAIA,UAAM;AAAEiB,MAAAA;AAAF,QAAW,MAAMf,OAAO,CAACa,GAAD,EAAMC,OAAN,CAA9B;;AACA,QAAIC,IAAI,CAACC,EAAT,EAAa;AACXb,MAAAA,QAAQ,CAAC,QAAD,CAAR;AACD;AACF;;AACD,sBACE;AAAM,IAAA,QAAQ,EAAEO,YAAhB;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAO,MAAA,KAAK,EAAC,YAAb;AAA0B,MAAA,IAAI,EAAC,WAA/B;AAA2C,MAAA,IAAI,EAAC;AAAhD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GArCQjB,kB;UACOJ,O,EAGsBC,Q,EACnBE,W;;;KALVC,kB;AAuCT,eAAeA,kBAAf","sourcesContent":["import React from 'react';\nimport Input from '../../../../Components/Form/Input';\nimport Button from '../../../../Components/Form/Button';\nimport Error from '../../../../Components/Helper/Error';\nimport useForm from '../../../../Hooks/useForm';\nimport useFetch from '../../../../Hooks/useFetch';\nimport { PASSWORD_RESET } from '../../../../api';\nimport { useNavigate } from 'react-router-dom';\n\nfunction LoginPasswordReset() {\n  const reset = useForm();\n  const [login, setLogin] = React.useState('');\n  const [key, setKey] = React.useState('');\n  const { request, loading, error } = useFetch();\n  const navigate = useNavigate();\n\n  React.useState(() => {\n    const params = URLSearchParams(window.location.search);\n    const key = params.get('key');\n\n    if (key) {\n      setKey(key);\n    }\n    if (login) {\n      setKey(login);\n    }\n  }, []);\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    const { url, options } = PASSWORD_RESET({\n      login,\n      key,\n    });\n    const { resp } = await request(url, options);\n    if (resp.ok) {\n      navigate('/login');\n    }\n  }\n  return (\n    <form onSubmit={handleSubmit}>\n      <h1 className=\"title\">Reset a senha</h1>\n      <Input label=\"Nova senha\" type=\"passwordd\" name=\"password\" />\n      <Button>Resetar</Button>\n    </form>\n  );\n}\n\nexport default LoginPasswordReset;\n"]},"metadata":{},"sourceType":"module"}