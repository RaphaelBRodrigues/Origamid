{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/raphael/Desktop/Origamid/React/ProjetoDogs/src/UserContext.js\",\n    _s = $RefreshSig$();\n\nimport react from 'react';\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { TOKEN_POST, TOKEN_VALIDATE_POST, USER_GET } from './api';\nexport const UserContext = /*#__PURE__*/React.createContext(null);\n\nfunction UserStorage({\n  children\n}) {\n  _s();\n\n  const [data, setData] = React.useState(null);\n  const [isLogged, setLogged] = React.useState(null);\n  const [isLoading, setLoading] = React.useState(false);\n  const [error, setError] = React.useState(null);\n  const navigate = useNavigate();\n  const userLogout = React.useCallback(async function () {\n    setData(null);\n    setError(null);\n    setLogged(false);\n    setLoading(false);\n    window.localStorage.removeItem('token');\n    navigate('/login');\n  });\n  React.useEffect(() => {\n    async function autoLogin() {\n      const token = window.localStorage.getItem('token');\n\n      if (token) {\n        try {\n          setError(null);\n          setLoading(true);\n          const {\n            url,\n            options\n          } = TOKEN_VALIDATE_POST(token);\n          const resp = await fetch(url, options);\n          if (!resp.ok) throw new Error('Token inválido');\n          getUser(token);\n        } catch (err) {\n          console.error(err);\n          setError(true);\n          userLogout();\n        } finally {\n          setLoading(false);\n        }\n      }\n    }\n\n    autoLogin();\n  }, [userLogout]);\n\n  async function getUser(token) {\n    const {\n      url,\n      options\n    } = USER_GET(token);\n    const resp = await fetch(url, options);\n    const json = await resp.json();\n    setData(json);\n    setLogged(true);\n  }\n\n  async function userLogin(username, password) {\n    try {\n      setError(null);\n      setLoading(true);\n      const {\n        url,\n        options\n      } = TOKEN_POST({\n        username,\n        password\n      });\n      const tokenRes = await fetch(url, options);\n      if (!tokenRes.ok) throw new Error(`Ocorreu um erro ao realizar o login`);\n      const {\n        token\n      } = await tokenRes.json();\n      window.localStorage.setItem('token', token);\n      await getUser(token);\n      navigate('/conta');\n    } catch (err) {\n      setError(err.message);\n      setLogged(false);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  const store = {\n    userLogin,\n    data,\n    userLogout,\n    error,\n    isLogged,\n    isLoading\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: store,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 10\n  }, this);\n}\n\n_s(UserStorage, \"eHmqe+lCmNtWumwnL9WlHbr3Zvk=\", false, function () {\n  return [useNavigate];\n});\n\n_c = UserStorage;\nexport default UserStorage;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserStorage\");","map":{"version":3,"sources":["/home/raphael/Desktop/Origamid/React/ProjetoDogs/src/UserContext.js"],"names":["react","React","useNavigate","TOKEN_POST","TOKEN_VALIDATE_POST","USER_GET","UserContext","createContext","UserStorage","children","data","setData","useState","isLogged","setLogged","isLoading","setLoading","error","setError","navigate","userLogout","useCallback","window","localStorage","removeItem","useEffect","autoLogin","token","getItem","url","options","resp","fetch","ok","Error","getUser","err","console","json","userLogin","username","password","tokenRes","setItem","message","store"],"mappings":"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","sourcesContent":["import react from 'react';\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { TOKEN_POST, TOKEN_VALIDATE_POST, USER_GET } from './api';\n\nexport const UserContext = React.createContext(null);\n\nfunction UserStorage({ children }) {\n  const [data, setData] = React.useState(null);\n  const [isLogged, setLogged] = React.useState(null);\n  const [isLoading, setLoading] = React.useState(false);\n  const [error, setError] = React.useState(null);\n  const navigate = useNavigate();\n\n  const userLogout = React.useCallback(async function () {\n    setData(null);\n    setError(null);\n    setLogged(false);\n    setLoading(false);\n    window.localStorage.removeItem('token');\n    navigate('/login');\n  });\n  React.useEffect(() => {\n    async function autoLogin() {\n      const token = window.localStorage.getItem('token');\n      if (token) {\n        try {\n          setError(null);\n          setLoading(true);\n          const { url, options } = TOKEN_VALIDATE_POST(token);\n          const resp = await fetch(url, options);\n          if (!resp.ok) throw new Error('Token inválido');\n          getUser(token);\n        } catch (err) {\n          console.error(err);\n          setError(true);\n          userLogout();\n        } finally {\n          setLoading(false);\n        }\n      }\n    }\n\n    autoLogin();\n  }, [userLogout]);\n\n  async function getUser(token) {\n    const { url, options } = USER_GET(token);\n    const resp = await fetch(url, options);\n    const json = await resp.json();\n    setData(json);\n    setLogged(true);\n  }\n\n  async function userLogin(username, password) {\n    try {\n      setError(null);\n      setLoading(true);\n\n      const { url, options } = TOKEN_POST({ username, password });\n      const tokenRes = await fetch(url, options);\n      if (!tokenRes.ok) throw new Error(`Ocorreu um erro ao realizar o login`);\n      const { token } = await tokenRes.json();\n      window.localStorage.setItem('token', token);\n      await getUser(token);\n      navigate('/conta');\n    } catch (err) {\n      setError(err.message);\n      setLogged(false);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  const store = {\n    userLogin,\n    data,\n    userLogout,\n    error,\n    isLogged,\n    isLoading,\n  };\n\n  return <UserContext.Provider value={store}>{children}</UserContext.Provider>;\n}\n\nexport default UserStorage;\n"]},"metadata":{},"sourceType":"module"}