{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/raphael/Desktop/Origamid/React/ProjetoDogs/src/UserContext.js\",\n    _s = $RefreshSig$();\n\nimport react from 'react';\nimport React from 'react';\nimport { TOKEN_POST, USER_GET } from './api';\nexport const UserContext = /*#__PURE__*/React.createContext(null);\n\nfunction UserStorage({\n  children\n}) {\n  _s();\n\n  const [data, setData] = React.useState(null);\n  const [isLogged, setLogged] = React.useState(null);\n  const [isLoading, setLoading] = React.useState(false);\n  const [error, setError] = React.useState(null);\n\n  async function getUser(token) {\n    const {\n      url,\n      options\n    } = USER_GET(token);\n    const resp = await fetch(url, options);\n    const json = await resp.json();\n    setData(json);\n    setLogged(true);\n  }\n\n  async function userLogin(username, password) {\n    const {\n      url,\n      options\n    } = TOKEN_POST({\n      username,\n      password\n    });\n    const tokenRes = await fetch(url, options);\n    const {\n      token\n    } = await tokenRes.json();\n    window.localStorage.setItem('token', token);\n    getUser(token);\n  }\n\n  const store = {\n    userLogin\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: store,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 10\n  }, this);\n}\n\n_s(UserStorage, \"AbCUlK/XSCdYQZQpkhy2+YXs6/I=\");\n\n_c = UserStorage;\nexport default UserStorage;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserStorage\");","map":{"version":3,"sources":["/home/raphael/Desktop/Origamid/React/ProjetoDogs/src/UserContext.js"],"names":["react","React","TOKEN_POST","USER_GET","UserContext","createContext","UserStorage","children","data","setData","useState","isLogged","setLogged","isLoading","setLoading","error","setError","getUser","token","url","options","resp","fetch","json","userLogin","username","password","tokenRes","window","localStorage","setItem","store"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,OAArC;AAEA,OAAO,MAAMC,WAAW,gBAAGH,KAAK,CAACI,aAAN,CAAoB,IAApB,CAApB;;AAEP,SAASC,WAAT,CAAqB;AAAEC,EAAAA;AAAF,CAArB,EAAmC;AAAA;;AACjC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,KAAK,CAACS,QAAN,CAAe,IAAf,CAAxB;AACA,QAAM,CAACC,QAAD,EAAWC,SAAX,IAAwBX,KAAK,CAACS,QAAN,CAAe,IAAf,CAA9B;AACA,QAAM,CAACG,SAAD,EAAYC,UAAZ,IAA0Bb,KAAK,CAACS,QAAN,CAAe,KAAf,CAAhC;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBf,KAAK,CAACS,QAAN,CAAe,IAAf,CAA1B;;AAEA,iBAAeO,OAAf,CAAuBC,KAAvB,EAA8B;AAC5B,UAAM;AAAEC,MAAAA,GAAF;AAAOC,MAAAA;AAAP,QAAmBjB,QAAQ,CAACe,KAAD,CAAjC;AACA,UAAMG,IAAI,GAAG,MAAMC,KAAK,CAACH,GAAD,EAAMC,OAAN,CAAxB;AACA,UAAMG,IAAI,GAAG,MAAMF,IAAI,CAACE,IAAL,EAAnB;AACAd,IAAAA,OAAO,CAACc,IAAD,CAAP;AACAX,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD;;AAED,iBAAeY,SAAf,CAAyBC,QAAzB,EAAmCC,QAAnC,EAA6C;AAC3C,UAAM;AAAEP,MAAAA,GAAF;AAAOC,MAAAA;AAAP,QAAmBlB,UAAU,CAAC;AAAEuB,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,KAAD,CAAnC;AACA,UAAMC,QAAQ,GAAG,MAAML,KAAK,CAACH,GAAD,EAAMC,OAAN,CAA5B;AACA,UAAM;AAAEF,MAAAA;AAAF,QAAY,MAAMS,QAAQ,CAACJ,IAAT,EAAxB;AACAK,IAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,EAAqCZ,KAArC;AACAD,IAAAA,OAAO,CAACC,KAAD,CAAP;AACD;;AACD,QAAMa,KAAK,GAAG;AACZP,IAAAA;AADY,GAAd;AAIA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEO,KAA7B;AAAA,cAAqCxB;AAArC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GA1BQD,W;;KAAAA,W;AA4BT,eAAeA,WAAf","sourcesContent":["import react from 'react';\nimport React from 'react';\nimport { TOKEN_POST, USER_GET } from './api';\n\nexport const UserContext = React.createContext(null);\n\nfunction UserStorage({ children }) {\n  const [data, setData] = React.useState(null);\n  const [isLogged, setLogged] = React.useState(null);\n  const [isLoading, setLoading] = React.useState(false);\n  const [error, setError] = React.useState(null);\n\n  async function getUser(token) {\n    const { url, options } = USER_GET(token);\n    const resp = await fetch(url, options);\n    const json = await resp.json();\n    setData(json);\n    setLogged(true);\n  }\n\n  async function userLogin(username, password) {\n    const { url, options } = TOKEN_POST({ username, password });\n    const tokenRes = await fetch(url, options);\n    const { token } = await tokenRes.json();\n    window.localStorage.setItem('token', token);\n    getUser(token);\n  }\n  const store = {\n    userLogin,\n  };\n\n  return <UserContext.Provider value={store}>{children}</UserContext.Provider>;\n}\n\nexport default UserStorage;\n"]},"metadata":{},"sourceType":"module"}