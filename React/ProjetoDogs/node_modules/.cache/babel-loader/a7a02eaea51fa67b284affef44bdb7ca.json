{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/raphael/Desktop/Origamid/React/ProjetoDogs/src/UserContext.js\",\n    _s = $RefreshSig$();\n\nimport react from 'react';\nimport React from 'react';\nimport { TOKEN_POST, TOKEN_VALIDATE_POST, USER_GET } from './api';\nexport const UserContext = /*#__PURE__*/React.createContext(null);\n\nfunction UserStorage({\n  children\n}) {\n  _s();\n\n  const [data, setData] = React.useState(null);\n  const [isLogged, setLogged] = React.useState(null);\n  const [isLoading, setLoading] = React.useState(false);\n  const [error, setError] = React.useState(null);\n  React.useEffect(() => {\n    async function autoLogin() {\n      const token = window.localStorage.getItem('token');\n\n      if (token) {\n        try {\n          setError(null);\n          setLoading(true);\n          const {\n            url,\n            options\n          } = TOKEN_VALIDATE_POST(token);\n          const resp = await fetch(url, options);\n          if (!resp.ok) throw new Error('Token inválido');\n          getUser(token);\n        } catch (err) {\n          console.error(err);\n          setError(true);\n          userLogout();\n        } finally {\n          setLoading(false);\n        }\n      }\n    }\n\n    autoLogin();\n  }, []);\n\n  async function getUser(token) {\n    const {\n      url,\n      options\n    } = USER_GET(token);\n    const resp = await fetch(url, options);\n    const json = await resp.json();\n    setData(json);\n    setLogged(true);\n  }\n\n  async function userLogin(username, password) {\n    const {\n      url,\n      options\n    } = TOKEN_POST({\n      username,\n      password\n    });\n    const tokenRes = await fetch(url, options);\n    const {\n      token\n    } = await tokenRes.json();\n    window.localStorage.setItem('token', token);\n    getUser(token);\n  }\n\n  async function userLogout() {\n    setData(null);\n    setError(null);\n    setLogged(false);\n    setLoading(false);\n    window.localStorage.removeItem('token');\n  }\n\n  const store = {\n    userLogin,\n    data,\n    userLogout\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: store,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 10\n  }, this);\n}\n\n_s(UserStorage, \"gKwaNLjskjXzPeIk60M3OzLsqfk=\");\n\n_c = UserStorage;\nexport default UserStorage;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserStorage\");","map":{"version":3,"sources":["/home/raphael/Desktop/Origamid/React/ProjetoDogs/src/UserContext.js"],"names":["react","React","TOKEN_POST","TOKEN_VALIDATE_POST","USER_GET","UserContext","createContext","UserStorage","children","data","setData","useState","isLogged","setLogged","isLoading","setLoading","error","setError","useEffect","autoLogin","token","window","localStorage","getItem","url","options","resp","fetch","ok","Error","getUser","err","console","userLogout","json","userLogin","username","password","tokenRes","setItem","removeItem","store"],"mappings":"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","sourcesContent":["import react from 'react';\nimport React from 'react';\nimport { TOKEN_POST, TOKEN_VALIDATE_POST, USER_GET } from './api';\n\nexport const UserContext = React.createContext(null);\n\nfunction UserStorage({ children }) {\n  const [data, setData] = React.useState(null);\n  const [isLogged, setLogged] = React.useState(null);\n  const [isLoading, setLoading] = React.useState(false);\n  const [error, setError] = React.useState(null);\n\n  React.useEffect(() => {\n    async function autoLogin() {\n      const token = window.localStorage.getItem('token');\n      if (token) {\n        try {\n          setError(null);\n          setLoading(true);\n          const { url, options } = TOKEN_VALIDATE_POST(token);\n          const resp = await fetch(url, options);\n          if (!resp.ok) throw new Error('Token inválido');\n          getUser(token);\n        } catch (err) {\n          console.error(err);\n          setError(true);\n          userLogout();\n        } finally {\n          setLoading(false);\n        }\n      }\n    }\n\n    autoLogin();\n  }, []);\n\n  async function getUser(token) {\n    const { url, options } = USER_GET(token);\n    const resp = await fetch(url, options);\n    const json = await resp.json();\n    setData(json);\n    setLogged(true);\n  }\n\n  async function userLogin(username, password) {\n    const { url, options } = TOKEN_POST({ username, password });\n    const tokenRes = await fetch(url, options);\n    const { token } = await tokenRes.json();\n    window.localStorage.setItem('token', token);\n    getUser(token);\n  }\n  async function userLogout() {\n    setData(null);\n    setError(null);\n    setLogged(false);\n    setLoading(false);\n    window.localStorage.removeItem('token');\n  }\n  const store = {\n    userLogin,\n    data,\n    userLogout,\n  };\n\n  return <UserContext.Provider value={store}>{children}</UserContext.Provider>;\n}\n\nexport default UserStorage;\n"]},"metadata":{},"sourceType":"module"}