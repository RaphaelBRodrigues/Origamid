{"version":3,"sources":["Pages/User/Components/Stats/Graphs/UserStatsGraphs.module.css","Pages/User/Components/Stats/Graphs/index.js"],"names":["module","exports","UserStatsGraphs","data","React","useState","graph","setGraph","total","setTotal","useEffect","graphData","map","item","x","title","y","acessos","result","reduce","sum","Number","className","style","graphItem","innerRadius","paddding","top","bottom","left","right","fillOpacity","stroke","strokeWidth","label","fontSize","fill","alignment"],"mappings":"iFACAA,EAAOC,QAAU,CAAC,MAAQ,+BAA+B,UAAY,mCAAmC,MAAQ,iC,uHC2DjGC,UAxDS,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAAW,EACVC,IAAMC,SAAS,IADL,mBAC7BC,EAD6B,KACtBC,EADsB,OAEVH,IAAMC,SAAS,GAFL,mBAE7BG,EAF6B,KAEtBC,EAFsB,KAmBpC,OAfAL,IAAMM,WAAU,WACd,IAAMC,EAAYR,EAAKS,KAAI,SAACC,GAC1B,MAAO,CACLC,EAAGD,EAAKE,MACRC,EAAGH,EAAKI,YAGZV,EAASI,GAET,IAAMO,EAASf,EAAKgB,QAAO,SAACC,EAAKP,GAC/B,OAAOQ,OAAOD,EAAMP,EAAKI,WACxB,GACHR,EAASS,KACR,IAGD,0BAASI,UAAS,oBAAeC,IAAMjB,OAAvC,UACE,qBAAKgB,UAAS,UAAKC,IAAMf,MAAX,YAAoBe,IAAMC,WAAxC,SACE,0CAAahB,OAEf,qBAAKc,UAAS,UAAKC,IAAMC,WAAzB,SACE,cAAC,IAAD,CACEC,YAAY,KACZtB,KAAMG,EACNoB,SAAU,CACRC,IAAK,GACLC,OAAQ,GACRC,KAAM,GACNC,MAAO,IAETP,MAAO,CACLpB,KAAM,CACJ4B,YAAa,GACbC,OAAQ,OACRC,YAAa,GAEfC,MAAO,CACLC,SAAU,GACVC,KAAM,aAKd,qBAAKd,UAAS,UAAKC,IAAMC,WAAzB,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAYrB,KAAMG,EAAO+B,UAAU","file":"static/js/4.08ae09c8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"graph\":\"UserStatsGraphs_graph__2T46e\",\"graphItem\":\"UserStatsGraphs_graphItem__21dFw\",\"total\":\"UserStatsGraphs_total__3jXkn\"};","import React from 'react';\nimport style from './UserStatsGraphs.module.css';\nimport { VictoryPie, VictoryChart, VictoryBar } from 'victory';\n\nconst UserStatsGraphs = ({ data }) => {\n  const [graph, setGraph] = React.useState([]);\n  const [total, setTotal] = React.useState(0);\n\n  React.useEffect(() => {\n    const graphData = data.map((item) => {\n      return {\n        x: item.title,\n        y: item.acessos,\n      };\n    });\n    setGraph(graphData);\n\n    const result = data.reduce((sum, item) => {\n      return Number(sum + item.acessos);\n    }, 0);\n    setTotal(result);\n  }, []);\n\n  return (\n    <section className={`animeLeft ${style.graph}`}>\n      <div className={`${style.total} ${style.graphItem}`}>\n        <p>Acessos: {total}</p>\n      </div>\n      <div className={`${style.graphItem}`}>\n        <VictoryPie\n          innerRadius=\"99\"\n          data={graph}\n          paddding={{\n            top: 20,\n            bottom: 20,\n            left: 80,\n            right: 80,\n          }}\n          style={{\n            data: {\n              fillOpacity: 0.9,\n              stroke: '#fff',\n              strokeWidth: 2,\n            },\n            label: {\n              fontSize: 14,\n              fill: '#333',\n            },\n          }}\n        />\n      </div>\n      <div className={`${style.graphItem}`}>\n        <VictoryChart>\n          <VictoryBar data={graph} alignment=\"start\" />\n        </VictoryChart>\n      </div>\n    </section>\n  );\n};\n\nexport default UserStatsGraphs;\n"],"sourceRoot":""}